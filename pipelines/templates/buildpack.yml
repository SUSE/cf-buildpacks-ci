<% libbuildpacks = %w(go hwc multi staticfile) %>

---
resource_types:
  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource
  - name: pivnet
    type: docker-image
    source:
      repository: pivotalcf/pivnet-resource
      tag: latest-final
  - name: cf-space-resource
    type: docker-image
    source:
      repository: cfbuildpacks/cf-space-resource
  - name: cron
    type: docker-image
    source:
      repository: cfbuildpacks/cron-resource

resources: ############################################################################################################

  ## Git ##

    <% if language == 'multi' || language == 'hwc' %>
      <% git_repo_organization = 'cloudfoundry-incubator' %>
    <% else %>
      <% git_repo_organization = organization %>
    <% end %>
  - name: buildpack-develop
    type: git
    source:
      uri: git@github.com:<%= git_repo_organization %>/<%= language %>-buildpack.git
      private_key: {{<%= language %>-buildpack-private-key}}
      branch: develop
      ignore_paths:
        - README.md
        - VERSION
        - CHANGELOG
        - LICENSE
        - NOTICE
        - ISSUE_TEMPLATE
        - PULL_REQUEST_TEMPLATE
        - "**/*.md"

  - name: buildpack-master
    type: git
    source:
      uri: git@github.com:<%= git_repo_organization %>/<%= language %>-buildpack.git
      private_key: {{<%= language %>-buildpack-private-key}}
      branch: master

  - name: buildpacks-ci
    type: git
    source:
      uri: {{buildpacks-ci-git-uri-public}}
      branch: {{buildpacks-ci-git-uri-public-branch}}

  - name: brats
    type: git
    source:
      uri: https://github.com/cloudfoundry/brats.git

<% unless language == 'multi' || language == 'hwc' %>
  - name: pivnet-buildpack-metadata
    type: git
    source:
      branch: master
      private_key: {{pivotal-cf-buildpacks-ci-robots}}
      uri: git@github.com:SUSE/cf-public-buildpacks-ci-robots
      paths: [ pivnet-metadata/<%= language %>.yml ]
<% end %>



<% if libbuildpacks.include? language %>
  - name: libbuildpack
    type: git
    source:
      uri: https://github.com/cloudfoundry/libbuildpack.git
<% else %>
  - name: compile-extensions
    type: git
    source:
      uri: https://github.com/cloudfoundry/compile-extensions.git
<% end %>


  - name: buildpack-checksums
    type: git
    source:
      uri: git@github.com:SUSE/cf-buildpack-checksums.git
      private_key: {{buildpack-checksums-private-key}}
      branch: master

<% if language == 'hwc' %>
  - name: buildpack-bosh-release
    type: git
    source:
      uri: git@github.com:<%= git_repo_organization %>/<%= language %>-buildpack-release.git
      private_key: {{<%= language %>-buildpack-bosh-release-private-key}}
      branch: master
<% end %>


  ## Github Releases ##

    <% if language == 'multi' || language == 'hwc' %>
      <% github_release_user = 'cloudfoundry-incubator' %>
    <% else %>
      <% github_release_user = '{{buildpacks-github-org}}' %>
    <% end %>
  - name: buildpack-github-release
    type: github-release
    source:
      user: <%= github_release_user %>
      repository: <%= language %>-buildpack
      access_token: {{buildpacks-github-token}}

<% if language == 'hwc' %>
  - name: buildpack-bosh-release-github-release
    type: github-release
    source:
      user: <%= github_release_user %>
      repository: <%= language %>-buildpack-release
      access_token: {{buildpacks-github-token}}
<% end %>

  - name: buildpack-packager
    type: github-release
    source:
      user: {{buildpacks-github-org}}
      repository: cf-buildpack-packager
      access_token: {{buildpacks-github-token}}

  - name: machete
    type: github-release
    source:
      user: {{buildpacks-github-org}}
      repository: cf-machete
      access_token: {{buildpacks-github-token}}

  ## S3 Buckets ##

  - name: pivotal-buildpack
    type: s3
    source:
      bucket: {{buildpacks-binaries-s3-bucket}}
      regexp: buildpack-release-candidates/<%= language%>/<%= language %>_buildpack-v(.*).zip
      access_key_id: {{pivotal-buildpacks-s3-access-key}}
      secret_access_key: {{pivotal-buildpacks-s3-secret-key}}
      endpoint: {{buildpacks-binaries-s3-endpoint}}

  - name: pivotal-buildpack-cached
    type: s3
    source:
      bucket: {{buildpacks-binaries-s3-bucket}}
      regexp: buildpack-release-candidates/<%= language%>/<%= language %>_buildpack-cached-v(.*).zip
      access_key_id: {{pivotal-buildpacks-s3-access-key}}
      secret_access_key: {{pivotal-buildpacks-s3-secret-key}}
      endpoint: {{buildpacks-binaries-s3-endpoint}}

  ## Resource Pools ##

  - name: edge-shared-environments
    type: pool
    source:
      branch: master
      pool: edge-shared-environments
      private_key: {{public-buildpacks-ci-robots-private-key}}
      uri: git@github.com:SUSE/cf-public-buildpacks-ci-robots

  ## Alerts ##

  - name: failure-alert
    type: slack-notification
    source:
      url: {{concourse-job-failure-notifications-slack-webhook}}

jobs: ################################################################################################################
  <% if language == "php" %>
  - name: ensure-manifest-has-modules
    serial: true
    public: true
    plan:
      - get: buildpacks-ci
      - get: buildpack
        resource: buildpack-develop
        trigger: true
      - task: load-modules
        file: buildpacks-ci/tasks/populate-php-modules-in-manifest/task.yml
        privileged: true
      - put: buildpack-develop
        params:
          repository: updated-buildpack
          rebase: true
  <% end %>
  - name: detect-new-version-and-upload-artifacts
    serial: true
    public: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: buildpack
          resource: buildpack-master
          trigger: true
        - get: pivotal-buildpack-cached
        - get: pivotal-buildpack
      - do:
        - task: detect-and-upload
          file: buildpacks-ci/tasks/detect-and-upload/task.yml
          privileged: true
          params:
            GIT_REPO_ORG: <%= git_repo_organization %>
            BUILDPACK_NAME: <%= language %>-buildpack
            RUBYGEM_MIRROR: {{rubygem-mirror}}
        - put: pivotal-buildpack
          params:
            file: buildpack-artifacts/*_buildpack-v*.zip
        - put: pivotal-buildpack-cached
          params:
            file: buildpack-artifacts/*_buildpack-cached-v*.zip
        on_failure:
          put: failure-alert
          params:
            text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
  - name: acceptance-tests-on-master
    serial: true
    public: true
    plan:
      - put: cf-environments
        resource: edge-shared-environments
        params:
          claim: <%= language %>
      - aggregate:
        - get: buildpacks-ci
        - get: buildpack
          passed: [ "detect-new-version-and-upload-artifacts" ]
          resource: buildpack-master
          trigger: true
        - get: pivotal-buildpacks
          resource: pivotal-buildpack
          passed: [ "detect-new-version-and-upload-artifacts" ]
          trigger: true
        - get: pivotal-buildpacks-cached
          resource: pivotal-buildpack-cached
          passed: [ "detect-new-version-and-upload-artifacts" ]
          trigger: true
      - do:
        - task: rspec
          file: buildpacks-ci/tasks/run-buildpack-shared-specs/task.yml
          params:
            STACKS: cflinuxfs2
            COMPOSER_GITHUB_OAUTH_TOKEN: {{composer-github-oauth-token}}
            CF_PASSWORD: {{ci_cf_shared_password}}
            RUBYGEM_MIRROR: {{rubygem-mirror}}
          privileged: true
          ensure:
            task: delete-cf-space
            file: buildpacks-ci/tasks/delete-cf-space/task-bp.yml
        on_failure:
          put: failure-alert
          params:
            text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
        ensure:
          put: edge-shared-environments
          params:
            release: cf-environments
  - name: ship-it
    serial: true
    public: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: pivotal-buildpacks-cached
          resource: pivotal-buildpack-cached
          passed:
            - acceptance-tests-on-master
        - get: buildpack
          passed:
            - acceptance-tests-on-master
          resource: buildpack-master
      - task: check tag not already added
        file: buildpacks-ci/tasks/check-tag-not-already-added/task.yml
      - put: buildpack-master
        params:
          repository: buildpack
          tag: buildpack/VERSION
          tag_prefix: v
  - name: buildpack-to-github
    serial: true
    public: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: pivotal-buildpacks-cached
          resource: pivotal-buildpack-cached
          passed: [ ship-it ]
          trigger: true
        - get: buildpack
          resource: buildpack-master
          passed: [ ship-it ]
          trigger: true
        - get: buildpack-checksums
      - task: finalize-buildpack
        file: buildpacks-ci/tasks/finalize-buildpack/task.yml
        privileged: true
      - task: commit-shas
        file: buildpacks-ci/tasks/get-commit-shasums/task.yml
        privileged: true
      - put: buildpack-checksums
        params:
          repository: sha-artifacts
          rebase: true
      - put: buildpack-github-release
        params:
          name: buildpack-artifacts/tag
          tag: buildpack-artifacts/tag
          body: buildpack-artifacts/RECENT_CHANGES
          globs:
            - buildpack-artifacts/*_buildpack-cached-v*.zip
            - buildpack-artifacts/*_buildpack-cached-v*.zip.SHA256SUM.txt
<% unless language == "multi" || language == "hwc" %>
  - name: write-pivnet-metadata
    serial: true
    public: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: pivnet-buildpack-metadata
        - get: pivotal-buildpacks-cached
          resource: pivotal-buildpack-cached
          passed: [ ship-it ]
          trigger: true
        - get: buildpack
          resource: buildpack-master
          passed: [ ship-it ]
          trigger: true
      - task: finalize-buildpack
        file: buildpacks-ci/tasks/finalize-buildpack/task.yml
        privileged: true
      - task: write-pivnet-metadata
        file: buildpacks-ci/tasks/write-buildpack-pivnet-metadata/task.yml
        params:
          BUILDPACK: <%= language %>
        privileged: true
      - put: pivnet-buildpack-metadata
        params:
          repository: pivnet-buildpack-metadata-artifacts
          rebase: true
<% end %>
  - name: acceptance-tests-on-develop
    serial: true
    public: true
    plan:
      - do:
        - put: cf-environments
          resource: edge-shared-environments
          params:
            claim: <%= language %>
        - aggregate:
          - get: buildpacks-ci
          - get: brats
          - get: buildpack
            resource: buildpack-develop
            trigger: true
        - aggregate:
          - do:
            - task: rspec
              file: buildpacks-ci/tasks/run-buildpack-shared-specs/task.yml
              params:
                STACKS: cflinuxfs2
                COMPOSER_GITHUB_OAUTH_TOKEN: {{composer-github-oauth-token}}
                CF_PASSWORD: {{ci_cf_shared_password}}
                RUBYGEM_MIRROR: {{rubygem-mirror}}
              privileged: true
            ensure:
              task: delete-cf-space
              file: buildpacks-ci/tasks/delete-cf-space/task-bp.yml
          - do:
            - task: brats
              file: buildpacks-ci/tasks/run-shared-brats/task.yml
              params:
                BUILDPACK_BRANCH: develop
                CI_CF_USERNAME: {{ci-cf-username}}
                CI_CF_PASSWORD: {{ci_cf_shared_password}}
                LANGUAGE: <%= language %>
                RUBYGEM_MIRROR: {{rubygem-mirror}}
            ensure:
              task: delete-cf-space
              file: buildpacks-ci/tasks/delete-cf-space/task-brat.yml
        on_failure:
          put: failure-alert
          params:
            text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
        ensure:
          put: edge-shared-environments
          params:
            release: cf-environments
<% if libbuildpacks.include? language %>
  - name: update-libbuildpack
    serial: true
    public: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: libbuildpack
          trigger: true
        - get: buildpack
          resource: buildpack-develop
      - task: update-libbuildpack
        file: buildpacks-ci/tasks/update-libbuildpack/task.yml
        params:
          LANGUAGE: <%= language %>
      - put: buildpack-develop
        params:
          repository: buildpack-artifacts
          rebase: true
<% else %>
  - name: update-compile-extensions
    serial: true
    public: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: compile-extensions
          trigger: true
        - get: buildpack
          resource: buildpack-develop
      - task: update-compile-extensions
        file: buildpacks-ci/tasks/update-compile-extensions/task.yml
        privileged: true
        params: { RUBYGEM_MIRROR: {{rubygem-mirror}}  }
      - put: buildpack-develop
        params:
          repository: buildpack-artifacts
          rebase: true
<% end %>
  - name: update-buildpack-packager
    serial: true
    public: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: gem
          resource: buildpack-packager
          trigger: true
        - get: repo-with-gemfile
          resource: buildpack-develop
      - task: update-buildpack-packager
        file: buildpacks-ci/tasks/update-gem-in-gemfile/task.yml
        privileged: true
        params:
          RUBYGEM_MIRROR: {{rubygem-mirror}}
          GEM_NAME: buildpack-packager
          GEM_GIT_REPOSITORY: {{buildpack-packager-git-uri-public}}
          GEMFILE_NAME: cf.Gemfile
      - put: buildpack-develop
        params:
          repository: repo-with-gemfile-artifacts
          rebase: true
  - name: update-machete
    serial: true
    public: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: gem
          resource: machete
          trigger: true
        - get: repo-with-gemfile
          resource: buildpack-develop
      - task: update-machete
        file: buildpacks-ci/tasks/update-gem-in-gemfile/task.yml
        privileged: true
        params:
          RUBYGEM_MIRROR: {{rubygem-mirror}}
          GEM_NAME: machete
          GEM_GIT_REPOSITORY: {{machete-git-uri-public}}
          GEMFILE_NAME: cf.Gemfile
      - put: buildpack-develop
        params:
          repository: repo-with-gemfile-artifacts
          rebase: true

<% if language == 'hwc' %>
  - name: update-buildpack-bosh-release
    serial: true
    public: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: release
          resource: buildpack-bosh-release
        - get: blob
          resource: buildpack-github-release
          trigger: true
          passed: [ buildpack-to-github ]
      - do:
        - task: convert release version to version resource
          file: buildpacks-ci/tasks/convert-release-to-version/task.yml
        - task: create-bosh-release
          file: buildpacks-ci/tasks/create-buildpack-bosh-release/task.yml
          params:
            ACCESS_KEY_ID: {{pivotal-buildpacks-s3-access-key}}
            SECRET_ACCESS_KEY: {{pivotal-buildpacks-s3-secret-key}}
            BLOB_GLOB: blob/<%= language %>*.zip
            BLOB_NAME: <%= language %>-buildpack
            RELEASE_NAME: <%= language %>-buildpack
            RELEASE_DIR: release
        - put: buildpack-bosh-release
          params:
            repository: release-artifacts
            rebase: true
            tag: blob/version
        - put: buildpack-bosh-release-github-release
          params:
            name: blob/version
            tag: blob/version
        on_failure:
          put: failure-alert
          params:
            text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
<% end %>
